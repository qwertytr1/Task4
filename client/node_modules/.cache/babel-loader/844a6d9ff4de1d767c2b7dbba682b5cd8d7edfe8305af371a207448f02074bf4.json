{"ast":null,"code":"var _jsxFileName = \"/Users/mahnach04icloud.com/Desktop/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/front-end/src/components/home/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedIds, setSelectedIds] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n  const [filterDate, setFilterDate] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [deletingIds, setDeletingIds] = useState([]);\n  const navigate = useNavigate();\n\n  // Получаем ID текущего пользователя из localStorage\n  const currentUserId = parseInt(localStorage.getItem('currentUserId') || '0', 10);\n  const [isAuthenticated, setIsAuthenticated] = useState(!!currentUserId);\n\n  // Проверяем авторизацию\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login'); // Если пользователь не авторизован, перенаправляем на логин\n    }\n  }, [isAuthenticated, navigate]);\n  const handleBlockUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:8081/users/block', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ids: selectedIds\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to block users.');\n      }\n\n      // Обновляем статус пользователей\n      const updatedUsers = users.map(user => selectedIds.includes(user.id) ? {\n        ...user,\n        status: 'blocked'\n      } : user);\n\n      // Указываем корректный тип для TypeScript\n      setUsers(updatedUsers);\n      alert('Selected users have been blocked.');\n      setSelectedIds([]);\n    } catch (error) {\n      console.error('Error blocking users:', error);\n      alert('Failed to block users. Please try again.');\n    }\n  };\n  const handleUnblockUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:8081/users/unblock', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ids: selectedIds\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to unblock users.');\n      }\n      alert('Selected users have been unblocked.');\n      fetchUsers(); // Обновляем список пользователей\n    } catch (error) {\n      console.error('Error unblocking users:', error);\n      alert('Failed to unblock users. Please try again.');\n    }\n  };\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:8081/users');\n      const data = await response.json();\n      const formattedData = data.map(user => {\n        let lastLogin = 'Never';\n        if (user.lastLogin) {\n          const date = new Date(user.lastLogin);\n          if (!Number.isNaN(date.getTime())) {\n            lastLogin = date.toLocaleString();\n          }\n        }\n        return {\n          ...user,\n          lastLogin,\n          registrationDate: new Date(user.registrationDate).toLocaleString()\n        };\n      });\n      setUsers(formattedData);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchUsers();\n    }\n  }, [isAuthenticated]);\n  const handleLogout = () => {\n    localStorage.removeItem('currentUserId'); // Очищаем данные авторизации\n    setIsAuthenticated(false); // Устанавливаем состояние неавторизованного пользователя\n    navigate('/login'); // Перенаправляем на страницу логина\n  };\n  const handleDelete = async () => {\n    try {\n      const response = await fetch('http://localhost:8081/users/delete', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ids: deletingIds\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete users.');\n      }\n\n      // Если текущий пользователь удален, выполняем выход\n      if (deletingIds.includes(currentUserId)) {\n        alert('Your account has been deleted. Redirecting to login...');\n        handleLogout();\n        return;\n      }\n\n      // Обновляем список пользователей\n      const updatedUsers = users.filter(user => !deletingIds.includes(user.id));\n      setUsers(updatedUsers);\n\n      // Сбрасываем выбор и закрываем модальное окно\n      setSelectedIds([]);\n      setSelectAll(false);\n      setShowModal(false);\n      alert('Selected users have been deleted.');\n    } catch (error) {\n      console.error('Error deleting users:', error);\n      alert('Failed to delete users. Please try again.');\n    }\n  };\n  const openDeleteModal = () => {\n    if (selectedIds.length === 0) {\n      console.warn('No users selected for deletion.');\n      return;\n    }\n    setDeletingIds(selectedIds);\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setDeletingIds([]);\n  };\n  const filteredUsers = filterDate ? users.filter(user => new Date(user.lastLogin || '').toLocaleDateString().includes(filterDate)) : users;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"filter-date\",\n            type: \"date\",\n            value: filterDate,\n            onChange: e => setFilterDate(e.target.value),\n            className: \"form-control\",\n            \"aria-label\": \"Filter by date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary me-2\",\n          onClick: handleBlockUsers,\n          \"aria-label\": \"Block selected users\",\n          children: \"Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-secondary me-2\",\n          onClick: handleUnblockUsers,\n          \"aria-label\": \"Unblock selected users\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-unlock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-danger\",\n          onClick: openDeleteModal,\n          \"aria-label\": \"Delete selected users\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-trash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectAll,\n              onChange: () => {\n                setSelectAll(!selectAll);\n                setSelectedIds(!selectAll ? users.map(u => u.id) : []);\n              },\n              \"aria-label\": \"Select all users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Registration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedIds.includes(user.id),\n              onChange: () => {\n                setSelectedIds(prev => prev.includes(user.id) ? prev.filter(id => id !== user.id) : [...prev, user.id]);\n              },\n              \"aria-label\": `Select user ${user.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.lastLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.status === 'active' ? 'Active' : 'Blocked'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.registrationDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal show d-block\",\n      tabIndex: -1,\n      role: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Confirm Deletion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Are you sure you want to delete\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: deletingIds.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 37\n              }, this), \" users?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: closeModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              onClick: handleDelete,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"K5Wfim4jrc11lc4PLZYJEEeypiE=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Home","_s","users","setUsers","selectedIds","setSelectedIds","selectAll","setSelectAll","filterDate","setFilterDate","showModal","setShowModal","deletingIds","setDeletingIds","navigate","currentUserId","parseInt","localStorage","getItem","isAuthenticated","setIsAuthenticated","handleBlockUsers","response","fetch","method","headers","body","JSON","stringify","ids","ok","Error","updatedUsers","map","user","includes","id","status","alert","error","console","handleUnblockUsers","fetchUsers","data","json","formattedData","lastLogin","date","Date","Number","isNaN","getTime","toLocaleString","registrationDate","handleLogout","removeItem","handleDelete","filter","openDeleteModal","length","warn","closeModal","filteredUsers","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","checked","u","prev","name","email","tabIndex","role","_c","$RefreshReg$"],"sources":["/Users/mahnach04icloud.com/Desktop/Новая папка/front-end/src/components/home/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './index.css';\n\ntype User = {\n  id: number;\n  name: string;\n  email: string;\n  status: 'active' | 'blocked'; // строгая типизация статуса\n  lastLogin: string | null;\n  registrationDate: string;\n  activity: number[];\n};\n\nconst Home: React.FC = () => {\n    const [users, setUsers] = useState<User[]>([]);\n    const [selectedIds, setSelectedIds] = useState<number[]>([]);\n    const [selectAll, setSelectAll] = useState(false);\n    const [filterDate, setFilterDate] = useState<string>('');\n    const [showModal, setShowModal] = useState(false);\n    const [deletingIds, setDeletingIds] = useState<number[]>([]);\n    const navigate = useNavigate();\n\n    // Получаем ID текущего пользователя из localStorage\n    const currentUserId = parseInt(localStorage.getItem('currentUserId') || '0', 10);\n    const [isAuthenticated, setIsAuthenticated] = useState(!!currentUserId);\n\n    // Проверяем авторизацию\n    useEffect(() => {\n        if (!isAuthenticated) {\n            navigate('/login'); // Если пользователь не авторизован, перенаправляем на логин\n        }\n    }, [isAuthenticated, navigate]);\n    const handleBlockUsers = async () => {\n        try {\n            const response = await fetch('http://localhost:8081/users/block', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ ids: selectedIds }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to block users.');\n            }\n\n            // Обновляем статус пользователей\n            const updatedUsers = users.map(\n                (user): User =>\n                    selectedIds.includes(user.id) ? { ...user, status: 'blocked' } : user,\n            );\n\n            // Указываем корректный тип для TypeScript\n            setUsers(updatedUsers);\n\n            alert('Selected users have been blocked.');\n            setSelectedIds([]);\n        } catch (error) {\n            console.error('Error blocking users:', error);\n            alert('Failed to block users. Please try again.');\n        }\n    };\n\n    const handleUnblockUsers = async () => {\n        try {\n            const response = await fetch('http://localhost:8081/users/unblock', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ ids: selectedIds }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to unblock users.');\n            }\n\n            alert('Selected users have been unblocked.');\n            fetchUsers(); // Обновляем список пользователей\n        } catch (error) {\n            console.error('Error unblocking users:', error);\n            alert('Failed to unblock users. Please try again.');\n        }\n    };\n    const fetchUsers = async () => {\n        try {\n            const response = await fetch('http://localhost:8081/users');\n            const data: User[] = await response.json();\n\n            const formattedData = data.map((user) => {\n                let lastLogin = 'Never';\n                if (user.lastLogin) {\n                    const date = new Date(user.lastLogin);\n                    if (!Number.isNaN(date.getTime())) {\n                        lastLogin = date.toLocaleString();\n                    }\n                }\n                return {\n                    ...user,\n                    lastLogin,\n                    registrationDate: new Date(user.registrationDate).toLocaleString(),\n                };\n            });\n\n            setUsers(formattedData);\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            fetchUsers();\n        }\n    }, [isAuthenticated]);\n\n    const handleLogout = () => {\n        localStorage.removeItem('currentUserId'); // Очищаем данные авторизации\n        setIsAuthenticated(false); // Устанавливаем состояние неавторизованного пользователя\n        navigate('/login'); // Перенаправляем на страницу логина\n    };\n\n    const handleDelete = async () => {\n        try {\n            const response = await fetch('http://localhost:8081/users/delete', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ ids: deletingIds }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to delete users.');\n            }\n\n            // Если текущий пользователь удален, выполняем выход\n            if (deletingIds.includes(currentUserId)) {\n                alert('Your account has been deleted. Redirecting to login...');\n                handleLogout();\n                return;\n            }\n\n            // Обновляем список пользователей\n            const updatedUsers = users.filter((user) => !deletingIds.includes(user.id));\n            setUsers(updatedUsers);\n\n            // Сбрасываем выбор и закрываем модальное окно\n            setSelectedIds([]);\n            setSelectAll(false);\n            setShowModal(false);\n\n            alert('Selected users have been deleted.');\n        } catch (error) {\n            console.error('Error deleting users:', error);\n            alert('Failed to delete users. Please try again.');\n        }\n    };\n\n    const openDeleteModal = () => {\n        if (selectedIds.length === 0) {\n            console.warn('No users selected for deletion.');\n            return;\n        }\n        setDeletingIds(selectedIds);\n        setShowModal(true);\n    };\n\n    const closeModal = () => {\n        setShowModal(false);\n        setDeletingIds([]);\n    };\n\n    const filteredUsers = filterDate\n        ? users.filter((user) =>\n            new Date(user.lastLogin || '').toLocaleDateString().includes(filterDate),\n        )\n        : users;\n\n    return (\n        <div className=\"container mt-4\">\n            <h1>User Table</h1>\n            <div className=\"d-flex justify-content-between mb-4\">\n                {/* Toolbar */}\n                <div className=\"d-flex justify-content-start\">\n                    <div className=\"me-3\">\n                        <input\n                            id=\"filter-date\"\n                            type=\"date\"\n                            value={filterDate}\n                            onChange={(e) => setFilterDate(e.target.value)}\n                            className=\"form-control\"\n                            aria-label=\"Filter by date\"\n                        />\n                    </div>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary me-2\"\n                        onClick={handleBlockUsers}\n                        aria-label=\"Block selected users\"\n                    >\n                        Block\n                    </button>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-outline-secondary me-2\"\n                        onClick={handleUnblockUsers}\n                        aria-label=\"Unblock selected users\"\n                    >\n                        <i className=\"bi bi-unlock\" />\n                    </button>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-outline-danger\"\n                        onClick={openDeleteModal}\n                        aria-label=\"Delete selected users\"\n                    >\n                        <i className=\"bi bi-trash\" />\n                    </button>\n                </div>\n            </div>\n            <table className=\"table table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>\n                            <input\n                                type=\"checkbox\"\n                                checked={selectAll}\n                                onChange={() => {\n                                    setSelectAll(!selectAll);\n                                    setSelectedIds(!selectAll ? users.map((u) => u.id) : []);\n                                }}\n                                aria-label=\"Select all users\"\n                            />\n                        </th>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Last Login</th>\n                        <th>Status</th>\n                        <th>Registration Date</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {filteredUsers.map((user) => (\n                        <tr key={user.id}>\n                            <td>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={selectedIds.includes(user.id)}\n                                    onChange={() => {\n                                        setSelectedIds((prev) =>\n                                            prev.includes(user.id)\n                                                ? prev.filter((id) => id !== user.id)\n                                                : [...prev, user.id],\n                                        );\n                                    }}\n                                    aria-label={`Select user ${user.name}`}\n                                />\n                            </td>\n                            <td>{user.id}</td>\n                            <td>{user.name}</td>\n                            <td>{user.email}</td>\n                            <td>{user.lastLogin}</td>\n                            <td>{user.status === 'active' ? 'Active' : 'Blocked'}</td>\n                            <td>{user.registrationDate}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            {/* Modal */}\n            {showModal && (\n                <div className=\"modal show d-block\" tabIndex={-1} role=\"dialog\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">Confirm Deletion</h5>\n                            </div>\n                            <div className=\"modal-body\">\n                                <p>\n                                    Are you sure you want to delete{' '}\n                                    <strong>{deletingIds.length}</strong> users?\n                                </p>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    onClick={closeModal}\n                                >\n                                    Cancel\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-danger\"\n                                    onClick={handleDelete}\n                                >\n                                    Confirm\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n    export default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}